{"version":3,"sources":["resources/bear.png","app-theme.ts","layouts/half.styles.ts","layouts/half.tsx","comnponents/no-camera.tsx","api/face.ts","comnponents/pica.tsx","comnponents/main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","theme","colorPrimary","colorGreen","colorBlue","colorCyan","colorRed","colorYellow","logsGray","logsBlack","palette","createUseStyles","require","mainLayout","height","position","display","flexDirection","alignItems","justifyContent","fontSize","color","minWidth","maxWidth","backgroundColor","padding","overflowY","marginTop","width","flexGrow","HalfColsLayout","leftColumn","rightColumn","styles","useStyles","Navbar","Brand","src","bear","className","alt","Collapse","id","Text","HalfColsLayoutThemeWrapper","props","NoCamera","loadModels","a","MODEL_URL","process","console","log","faceapi","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","useTinyModel","img","withFaceLandmarks","withFaceDescriptors","fullDesc","createMatcher","faceProfile","members","Object","keys","labeledDescriptors","map","member","name","descriptors","descriptor","Float32Array","faceMatcher","JSON_PROFILE","VideoInput","webcam","interval","componentWillMount","setState","setInputDevice","navigator","mediaDevices","enumerateDevices","then","devices","filter","device","kind","length","facingMode","exact","startCapture","setInterval","capture","current","getScreenshot","detections","fd","detection","state","findBestMatch","match","React","createRef","clearInterval","this","videoConstraints","camera","drawBox","i","_H","box","_W","_X","_x","_Y","_y","key","style","border","borderColor","transform","_label","audio","ref","screenshotFormat","Component","Main","useState","camOn","setCam","setRadioValue","e","ButtonGroup","toggle","ToggleButton","type","variant","value","checked","onClick","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2067c91f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bear.bed92471.png\";","const theme = {\n  colorPrimary: '#011f43',\n\n  colorGreen: \"#5CB85C\",\n  colorBlue: \"#1C7CD5\",\n  colorCyan: \"#56C0E0\",\n  colorRed: \"#D9534F\",\n  colorYellow: \"#FFC108\",\n  logsGray: \"#2B2B2B\",\n  logsBlack: \"#191919\",\n\n  palette: [\n    //Grayscale\n    \"white\",\n    \"#DDDDDD\",\n    \"#777777\",\n    \"#55595C\",\n    \"#373A3C\",\n  ]\n}\n\nexport type ITheme = typeof theme;\n\nexport default theme;","import { ITheme } from \"../app-theme\";\n\nconst { createUseStyles } = require('react-jss');\n\nexport default createUseStyles((theme: ITheme) => {\n  return {\n    mainLayout: {\n      //   minWidth: \"1280px\",\n      //   maxWidth: \"1600px\",\n      height: \"100vh\",\n      position: \"relative\",\n      display: \"flex\",\n      flexDirection: \"row\",\n\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      fontSize: \"12pt\",\n      color: \"white\",\n\n      \"& > .left-background\": {\n        minWidth: \"327px\",\n        maxWidth: \"327px\",\n        height: \"100%\",\n        position: \"relative\",\n        backgroundColor: theme.palette[1],\n      },\n\n      \"& > .left-background .left-column\": {\n        //minWidth: \"327px\",\n        //maxWidth: \"327px\",\n        //display: \"block\",\n        //height: \"100%\",\n        height: \"calc(100% - 130px)\",\n        position: \"relative\",\n        //flexGrow: 0,\n        color: theme.palette[4],\n        //backgroundColor: theme.palette[1],\n        padding: \"0px 13px 0px 13px\",\n        overflowY: \"scroll\",\n        marginTop: \"60px\"\n\n      },\n\n      \"& > .left-background .left-column .cards-area\": {\n        width: \"100%\",\n        height: \"100%\"\n        //overflowY: \"scroll\"\n      },\n\n      \"& > .center-column\": {\n        //width: \"calc(100% - 1152px)\",\n        //minWidth: \"1280px\",\n        //maxWidth: \"1600px\",\n        width: \"100%\",\n        height: \"100%\",\n        flexGrow: 1,\n        color: theme.palette[4],\n        backgroundColor: theme.palette[0],\n        padding: \"100px 100px 50px 50px\",\n        overflowY: \"scroll\"\n      },\n\n      \"& > .right-column\": {\n        width: \"384px\",\n        position: \"relative\",\n        color: theme.palette[1],\n        height: \"100%\",\n        backgroundColor: theme.palette[4],\n        overflowY: \"scroll\"\n      },\n    }\n  }\n})","import React from 'react';\n\nimport { ThemeProvider } from 'react-jss';\nimport theme from '../app-theme';\n\nimport useStyles from './half.styles';\nimport Navbar from 'react-bootstrap/Navbar';\n\n// import {NavDropdown, Nav} from \"react-bootstrap/\";\nimport bear from \"../resources/bear.png\"\n\nimport \"../App.css\"\n\nexport interface Props {\n  leftColumn: React.ReactElement;  \n  rightColumn: React.ReactElement;\n}\n\nconst HalfColsLayoutThemeWrapper: React.FC<Props> = props =>\n  <ThemeProvider theme={ theme }>\n    <HalfColsLayout { ...props } />\n    </ThemeProvider>\n\nconst HalfColsLayout: React.FC<Props> = ({ leftColumn, rightColumn }) => {\n  const styles = useStyles();\n\n  return (\n    <div>\n      {/* <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" style = {{ height: '84px' }}> */}\n      <Navbar>\n        <Navbar.Brand>\n          <img          \n            src={bear}\n            height = \"70\"\n            className= \"d-inline-block align-top App-logo\"            \n            alt = \"kumar-logo\"\n          />\n        </Navbar.Brand>        \n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Navbar.Text>\n          ようこそ！熊AR\n          </Navbar.Text>                    \n        </Navbar.Collapse>\n      </Navbar>\n      <div className = { styles.mainLayout } >\n        <div className= \"left-background\" >\n          <div className=\"left-column\" >\n            <div className=\"cards-area\" >\n            { leftColumn }\n            </div>\n          </div>\n      </div>\n      <div className = \"center-column\" >\n        { rightColumn }\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HalfColsLayoutThemeWrapper;","import React from \"react\"\n\nfunction NoCamera() {\n  return <div>\n    <img\n      src={\"https://cdn.pixabay.com/photo/2017/02/12/21/29/false-2061132_960_720.png\"}      \n      className=\"d-inline-block align-top\"\n      height={50}\n      alt=\"camera-logo\"\n    />\n    <span>カメラ信号を受信できませんでした</span>\n  </div>\n}\n\nexport default NoCamera","import * as faceapi from 'face-api.js';\n\n// Load models and weights\nexport async function loadModels() {\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\n  console.log(\"MODEL_URL\",MODEL_URL);\n  // const MODEL_URL = \"https://github.com/supachaic/react-face-recognition/tree/master/public/models\"\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n  await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\n  await faceapi.loadFaceRecognitionModel(MODEL_URL);\n}\n\nexport async function getFullFaceDescription(blob: any, inputSize = 512) {\n  // tiny_face_detector options\n  let scoreThreshold = 0.5;\n  const OPTION = new faceapi.TinyFaceDetectorOptions({\n    inputSize,\n    scoreThreshold\n  });\n  const useTinyModel = true;\n\n  // fetch image to api\n  let img = await faceapi.fetchImage(blob);\n\n  // detect all faces and generate full description from image\n  // including landmark and descriptor of each face\n  let fullDesc = await faceapi\n    .detectAllFaces(img, OPTION)\n    .withFaceLandmarks(useTinyModel)\n    .withFaceDescriptors();\n  return fullDesc;\n}\n\nconst maxDescriptorDistance = 0.5;\nexport async function createMatcher(faceProfile: any) {\n  // Create labeled descriptors of member from profile\n  let members = Object.keys(faceProfile);\n  let labeledDescriptors = members.map(\n    member =>\n      new faceapi.LabeledFaceDescriptors(\n        faceProfile[member].name,\n        faceProfile[member].descriptors.map(\n          (descriptor:any) => new Float32Array(descriptor)\n        )\n      )\n  );\n\n  // Create face matcher (maximum descriptor distance is 0.5)\n  let faceMatcher = new faceapi.FaceMatcher(\n    labeledDescriptors,\n    maxDescriptorDistance\n  );\n  return faceMatcher;\n}","import React, { Component } from 'react';\nimport Webcam from 'react-webcam';\nimport { loadModels, getFullFaceDescription, createMatcher } from '../api/face';\n\n// Import face profile\nconst JSON_PROFILE = require('../descriptors/bnk48.json');\n\nconst WIDTH = 420;\nconst HEIGHT = 420;\nconst inputSize = 160;\n\ninterface IVideoInputState {\n    fullDesc: any;\n    detections: any;\n    descriptors: any;\n    faceMatcher: any;\n    match: any;\n    facingMode: any;\n}\n\n\nclass VideoInput extends Component<{},IVideoInputState> {\n  webcam: React.RefObject<Webcam>;\n  interval: NodeJS.Timeout ;\n//   webcam: Webcam;\n  constructor(props: any) {\n    super(props);\n    this.interval = setInterval(() => {},1500);\n    this.webcam = React.createRef<Webcam>();\n    this.state = {\n      fullDesc: null,\n      detections: null,\n      descriptors: null,\n      faceMatcher: null,\n      match: null,\n      facingMode: ''\n    };\n  }\n\n  componentWillMount = async () => {\n    await loadModels();\n    console.log(\"HEHEHEH\");\n    // console.log(JSON_PROFILE);\n    const a  = await createMatcher(JSON_PROFILE)\n    // console.log(\"A\",a);\n    this.setState({ faceMatcher: a });\n    this.setInputDevice();\n  };\n\n  setInputDevice = () => {\n    navigator.mediaDevices.enumerateDevices().then(async devices => {      \n      let inputDevice = await devices.filter(\n        device => device.kind === 'videoinput'\n      );\n      if (inputDevice.length < 2) {\n        await this.setState({\n          facingMode: 'user'\n        });\n      } else {\n        await this.setState({\n          facingMode: { exact: 'environment' }\n        });\n      }\n      this.startCapture();\n    });\n  };\n\n  startCapture = () => {\n    this.interval = setInterval(() => {\n      this.capture();\n    }, 1500);\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  capture = async () => {\n    if (!!this.webcam.current) {\n      await getFullFaceDescription(\n        this.webcam.current.getScreenshot(),\n        inputSize\n      ).then(fullDesc => {\n        if (!!fullDesc) {\n          this.setState({\n            detections: fullDesc.map(fd => fd.detection),\n            descriptors: fullDesc.map(fd => fd.descriptor)\n          });\n        }\n      });\n\n      if (!!this.state.descriptors && !!this.state.faceMatcher) {\n        let match = await this.state.descriptors.map((descriptor:any) =>\n          this.state.faceMatcher.findBestMatch(descriptor)\n        );\n        this.setState({ match });\n      }\n    }\n  };\n\n  render() {\n    const { detections, match, facingMode } = this.state;\n    let videoConstraints = null;\n    let camera = '';\n    if (!!facingMode) {\n      videoConstraints = {\n        width: WIDTH,\n        height: HEIGHT,\n        facingMode: facingMode\n      };\n      if (facingMode === 'user') {\n        camera = 'Front';\n      } else {\n        camera = 'Back';\n      }\n    }\n\n    let drawBox = null;\n    if (!!detections) {\n      drawBox = detections.map((detection:any, i:number) => {\n        let _H = detection.box.height;\n        let _W = detection.box.width;\n        let _X = detection.box._x;\n        let _Y = detection.box._y;\n        return (\n          <div key={i}>\n            <div\n              style={{\n                position: 'absolute',\n                border: 'solid',\n                borderColor: 'blue',\n                height: _H,\n                width: _W,\n                transform: `translate(${_X}px,${_Y}px)`\n              }}\n            >\n              {!!match && !!match[i] ? (\n                <p\n                  style={{\n                    backgroundColor: 'blue',\n                    border: 'solid',\n                    borderColor: 'blue',\n                    width: _W,\n                    marginTop: 0,\n                    color: '#fff',\n                    transform: `translate(-3px,${_H}px)`\n                  }}\n                >\n                  {match[i]._label}\n                </p>\n              ) : null}\n            </div>\n          </div>\n        );\n      });\n    }\n\n    return (\n      <div\n        className=\"Camera\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        }}\n      >\n        <p>Camera: {camera}</p>\n        <div\n          style={{\n            width: WIDTH,\n            height: HEIGHT\n          }}\n        >\n          <div style={{ position: 'relative', width: WIDTH }}>\n            {!!videoConstraints ? (\n              <div style={{ position: 'absolute' }}>\n                <Webcam\n                  audio={false}\n                  width={WIDTH}\n                  height={HEIGHT}\n                  ref={this.webcam as any}\n                  screenshotFormat=\"image/jpeg\"\n                  videoConstraints={videoConstraints}\n                />\n              </div>\n            ) : null}\n            {!!drawBox ? drawBox : null}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VideoInput;","import React, { useState } from 'react';\n\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\nimport NoCamera from \"./no-camera\";\nimport Camera from \"./camera\"\n// import PoseComponent from \"./pose\"\nimport Pica from \"./pica\";\n\nfunction Main() {  \n\n  const [camOn, setCam] = useState<boolean>(false);\n\n  const setRadioValue = (e: boolean) => {\n    setCam(e);\n  }\n\n  return <div>\n    {/* {camOn ? <Camera/> : <NoCamera/>} */}\n    {/* {camOn ? <PoseComponent /> : <NoCamera />} */}\n    {camOn ? <Pica /> : <NoCamera />}\n    <ButtonGroup toggle>\n      <ToggleButton\n        key={\"0\"}\n        type=\"radio\"\n        variant=\"secondary\"\n        name=\"radio\"\n        value={\"ON\"}\n        checked={camOn}\n        onClick={(e) => setRadioValue(true)}\n      >オン\n        </ToggleButton>\n      <ToggleButton\n        key={\"1\"}\n        type=\"radio\"\n        variant=\"secondary\"\n        name=\"radio\"\n        value={\"OFF\"}\n        checked={!camOn}\n        onClick={(e) => setRadioValue(false)}\n      >オフ\n        </ToggleButton>\n    </ButtonGroup>\n    \n  </div>\n}\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport HalfLayout from \"./layouts/half\"\nimport MainComponent from \"./comnponents/main\"\n\nfunction App() {\n  return <HalfLayout leftColumn={<div />} rightColumn={<MainComponent/>} />  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}